<% let cols = 1 %>
<div class="row">
    <div class="col-12 mb-4 data-table-rows data-tables-hide-filter">
        <table id="<$ crudNameSnakeCase $>_table" class="data-table responsive nowrap">
            
            <thead>
                <tr>
                    <th>{{ __('No') }}</th>
                    <% for(let input of this.crud.inputs) { %>
                    <% if(input.isAllowedOnIndexPages() && input.onIndex) { %>
                    <% cols++ %>
                    <th>{{ __('<$ input.name $>') }}</th>
                    <% } %>
                    <% } %>
                    <th>{{ __('action')}}</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
            <tfoot>
                <tr>
                    <th></th>
                    <% for(let input of this.crud.inputs) { %>
                    <% if(input.isAllowedOnIndexPages() && input.onIndex) { %>
                    <% cols++ %>
                    <th></th>
                    <% } %>
                    <% } %>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

@push('scripts')
<x-modal  id="Modal_<$ this.model.name $>" maxWidth="lg">
    <x-slot name="title">
        modal Initial
    </x-slot>
    <x-form method="POST" action="" id="Form_<$ this.model.name $>">
        <x-inputs.hidden name="id" class="id" ></x-inputs.hidden>

        @include('<$ this.project.viewsPath() $>.<$ modelPluralSnakeCase $>.form-inputs')
        
        <div class="modal-footer">
            <button type="button" class="btn btn-outline-primary" data-dismiss="modal"><i class="mr-1 glyph-icon simple-icon-close"></i> {{_('cancel')}}</button>
            <button type="submit" class="btn btn-primary float-right" id="Save<$ this.model.name $>">
                <i class="mr-1 glyph-icon iconsminds-disk"></i>
                {{ __('save') }}
            </button>
        </div>
    </x-form>
</x-modal>

<script type="text/javascript">
$(function () {
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });

    var $dataTable<$ this.model.name $> = $('#<$ crudNameSnakeCase $>_table').DataTable({
        processing: true,
        serverSide: true,
        bLengthChange: false,
        buttons: ['copy','excel','csv','pdf'],
        destroy: true,
        info: false,
        sDom: '<"row view-filter"<"col-sm-12"<"float-left"l><"float-right"f><"clearfix">>>t<"row view-pager"<"col-sm-12"<"text-center"ip>>>',
        ajax: "{{ route('<$ modelPluralParamCase $>.index') }}",
        language: {
            paginate: {
                previous: "<i class='simple-icon-arrow-left'></i>",
                next: "<i class='simple-icon-arrow-right'></i>"
            }
        },
        pageLength: 2,
        columns: [
            <% for(let input of this.crud.inputs) { %>
            <% if(input.isAllowedOnIndexPages() && input.onIndex) { %>
            <% cols++ %>
            {data: '<$ input.name $>', name: '<$ input.name $>'},
            <% } %>
            <% } %>
            {data: 'action', name: 'action', orderable: false, searchable: false, width: '100'},
        ],
        responsive: true,
        columnDefs: [
            { responsivePriority: 1, targets: 0 },
            { responsivePriority: 2, targets: -1, className: 'empty text-center' }
        ],
        drawCallback: function () {
            $($(".dataTables_wrapper .pagination li:first-of-type"))
                .find("a")
                .addClass("prev");
            $($(".dataTables_wrapper .pagination li:last-of-type"))
                .find("a")
                .addClass("next");
            $(".dataTables_wrapper .pagination").addClass("pagination-sm");
            var api = $(this).dataTable().api();
            $("#pageCountDatatable span").html("Displaying " + parseInt(api.page.info().start + 1) + "-" + api.page.info().end + " of " + api.page.info().recordsTotal + " items");
        }
    });

    @include('layouts.ajax',['AjaxModal' => ['routeAjax' => "<$ modelPluralParamCase $>",'modelAjax' => "<$ this.model.name $>"]])


});
</script>
@endpush